import React from 'react';\nimport ChatMessage from './ChatMessage';\n\n// Demo component to showcase the enhanced ChatMessage with URLs and media\nexport default function ChatMessageDemo() {\n    // Sample messages with different types of content\n    const sampleMessages = [\n        {\n            id: '1',\n            text: 'Check out this website: https://www.google.com and also www.github.com',\n            senderDisplayName: 'John Doe',\n            createTime: new Date(),\n            isSentByCurrentUser: false,\n            attachments: []\n        },\n        {\n            id: '2', \n            text: 'Here is the document you requested. Please review https://docs.google.com/document/d/xyz',\n            senderDisplayName: 'You',\n            createTime: new Date(Date.now() - 60000),\n            isSentByCurrentUser: true,\n            attachments: [\n                {\n                    filename: 'project-proposal.pdf',\n                    contentType: 'application/pdf',\n                    mimeType: 'application/pdf',\n                    isDocument: true,\n                    fileSize: 1024 * 1024 * 2.5, // 2.5MB\n                    downloadStatus: 'completed',\n                    localPath: '/path/to/media/project-proposal.pdf'\n                }\n            ]\n        },\n        {\n            id: '3',\n            text: 'Look at this screenshot I took!',\n            senderDisplayName: 'Alice Smith',\n            createTime: new Date(Date.now() - 120000),\n            isSentByCurrentUser: false,\n            attachments: [\n                {\n                    filename: 'screenshot.png',\n                    contentType: 'image/png',\n                    mimeType: 'image/png',\n                    isImage: true,\n                    mediaType: 'image',\n                    fileSize: 1024 * 500, // 500KB\n                    downloadStatus: 'completed',\n                    localPath: '/path/to/media/screenshot.png',\n                    dimensions: { width: 1920, height: 1080 }\n                }\n            ]\n        },\n        {\n            id: '4',\n            text: 'Audio recording from the meeting',\n            senderDisplayName: 'Mike Johnson',\n            createTime: new Date(Date.now() - 180000),\n            isSentByCurrentUser: false,\n            attachments: [\n                {\n                    filename: 'meeting-recording.mp3',\n                    contentType: 'audio/mp3',\n                    mimeType: 'audio/mp3',\n                    isAudio: true,\n                    mediaType: 'audio',\n                    fileSize: 1024 * 1024 * 5, // 5MB\n                    duration: 180, // 3 minutes\n                    downloadStatus: 'completed',\n                    localPath: '/path/to/media/meeting-recording.mp3'\n                }\n            ]\n        },\n        {\n            id: '5',\n            text: 'Video demo of the new feature',\n            senderDisplayName: 'Sarah Wilson',\n            createTime: new Date(Date.now() - 240000),\n            isSentByCurrentUser: false,\n            attachments: [\n                {\n                    filename: 'demo-video.mp4',\n                    contentType: 'video/mp4',\n                    mimeType: 'video/mp4',\n                    isVideo: true,\n                    mediaType: 'video',\n                    fileSize: 1024 * 1024 * 15, // 15MB\n                    duration: 120, // 2 minutes\n                    downloadStatus: 'completed',\n                    localPath: '/path/to/media/demo-video.mp4',\n                    thumbnailUrl: '/path/to/media/thumbnails/demo-video.jpg',\n                    dimensions: { width: 1280, height: 720 }\n                }\n            ]\n        },\n        {\n            id: '6',\n            text: 'File attachment that hasn\\'t been processed yet',\n            senderDisplayName: 'Bob Brown',\n            createTime: new Date(Date.now() - 300000),\n            isSentByCurrentUser: false,\n            attachments: [\n                {\n                    filename: 'data-export.xlsx',\n                    contentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                    contentName: 'data-export.xlsx',\n                    size: 1024 * 1024 * 3 // 3MB - note: using 'size' instead of 'fileSize' for unprocessed\n                    // No mediaType, isImage, localPath, etc. - simulating unprocessed attachment\n                }\n            ]\n        },\n        {\n            id: '7',\n            text: 'Multiple attachments in one message. Check these files and visit https://example.com for more info',\n            senderDisplayName: 'Emma Davis',\n            createTime: new Date(Date.now() - 360000),\n            isSentByCurrentUser: false,\n            attachments: [\n                {\n                    filename: 'report.pdf',\n                    contentType: 'application/pdf',\n                    mimeType: 'application/pdf',\n                    isDocument: true,\n                    mediaType: 'document',\n                    fileSize: 1024 * 1024 * 2, // 2MB\n                    downloadStatus: 'completed',\n                    localPath: '/path/to/media/report.pdf'\n                },\n                {\n                    filename: 'chart.png',\n                    contentType: 'image/png',\n                    mimeType: 'image/png',\n                    isImage: true,\n                    mediaType: 'image',\n                    fileSize: 1024 * 200, // 200KB\n                    downloadStatus: 'completed',\n                    localPath: '/path/to/media/chart.png'\n                },\n                {\n                    filename: 'backup.zip',\n                    contentType: 'application/zip',\n                    mimeType: 'application/zip',\n                    mediaType: 'archive',\n                    fileSize: 1024 * 1024 * 10, // 10MB\n                    downloadStatus: 'skipped',\n                    downloadError: 'File too large to download'\n                }\n            ]\n        },\n        {\n            id: '8',\n            text: 'Just a regular message with some URLs like https://react.dev and https://tailwindcss.com for reference.',\n            senderDisplayName: 'You',\n            createTime: new Date(Date.now() - 420000),\n            isSentByCurrentUser: true,\n            attachments: []\n        }\n    ];\n\n    return (\n        <div className=\"max-w-4xl mx-auto p-6 bg-gray-50 min-h-screen\">\n            <div className=\"bg-white rounded-lg shadow-lg p-6\">\n                <h1 className=\"text-2xl font-bold text-gray-800 mb-6\">Enhanced Chat Message Demo</h1>\n                <p className=\"text-gray-600 mb-8\">\n                    This demo showcases the enhanced ChatMessage component with:\n                </p>\n                <ul className=\"text-gray-600 mb-8 list-disc list-inside space-y-2\">\n                    <li>✅ <strong>Clickable URLs</strong> - URLs in messages are automatically detected and made clickable</li>\n                    <li>✅ <strong>Media attachments</strong> - Images, videos, and audio files are displayed inline</li>\n                    <li>✅ <strong>Document attachments</strong> - PDFs, Word docs, etc. with download/view options</li>\n                    <li>✅ <strong>Fallback handling</strong> - Unprocessed attachments are shown with processing status</li>\n                    <li>✅ <strong>Multiple file types</strong> - Smart detection of file types by extension and MIME type</li>\n                    <li>✅ <strong>Download status</strong> - Visual indicators for file processing status</li>\n                </ul>\n                \n                <div className=\"bg-gray-100 rounded-lg p-4\">\n                    <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Sample Chat Messages:</h2>\n                    \n                    <div className=\"space-y-4\">\n                        {sampleMessages.map((message) => (\n                            <ChatMessage \n                                key={message.id}\n                                message={message}\n                                showAvatar={true}\n                                showName={true}\n                                groupMessage={true}\n                            />\n                        ))}\n                    </div>\n                </div>\n                \n                <div className=\"mt-8 p-4 bg-blue-50 rounded-lg\">\n                    <h3 className=\"text-lg font-semibold text-blue-800 mb-2\">Implementation Notes:</h3>\n                    <ul className=\"text-blue-700 space-y-2 list-disc list-inside\">\n                        <li>URLs are detected using a comprehensive regex pattern</li>\n                        <li>File types are detected by multiple methods: isImage/isVideo flags, mediaType, mimeType, and file extension</li>\n                        <li>Unprocessed attachments show helpful messages to trigger sync</li>\n                        <li>Media files include view and download options</li>\n                        <li>File sizes are formatted in human-readable units</li>\n                        <li>Error states are clearly indicated with appropriate icons and colors</li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n// Usage example:\n// import ChatMessageDemo from './components/ChatMessageDemo';\n// \n// function App() {\n//   return <ChatMessageDemo />;\n// }
